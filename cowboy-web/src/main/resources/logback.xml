<?xml version="1.0" encoding="UTF-8"?>
<!-- 从高到地低 OFF 、 FATAL 、 ERROR 、 WARN 、 INFO 、 DEBUG 、 TRACE 、 ALL -->
<!-- 日志输出规则 根据当前ROOT 级别，日志输出时，级别高于root默认的级别时 会输出 -->
<!-- 以下 每个配置的 filter 是过滤掉输出文件里面，会出现高级别文件，依然出现低级别的日志信息，通过filter 过滤只记录本级别的日志 -->
<!-- 属性描述 scan：性设置为true时，配置文件如果发生改变，将会被重新加载，默认值为true scanPeriod:设置监测配置文件是否有修改的时间间隔，如果没有给出时间单位，默认单位是毫秒。当scan为true时，此属性生效。默认的时间间隔为1分钟。 
	debug:当此属性设置为true时，将打印出logback内部日志信息，实时查看logback运行状态。默认值为false。 -->
<configuration scan="true" scanPeriod="60 seconds" debug="false">
	<!-- 定义日志文件 输入位置 -->
	<property name="log_dir" value="e:/log/cowboy" />
	<property name="project_name" value="cowboy"></property>
	<!-- 日志最大的历史 30天 -->
	<property name="maxHistory" value="180"/>
	<property name="logPattern" value="[%date] [%level] [%thread] %logger %line -- [%X{traceLogId}] %msg%n"></property>


	<!-- 控制台日志打印 -->
	<appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
		<encoder charset="UTF-8"> <!-- encoder 可以指定字符集，对于中文输出有意义 -->
			<!-- %-5level 左对齐显示日志等级,共占5格 -->
			<!--程序中用MDC.putTraceLogId("键名","键值")设置，%X{键名}可动态设置 -->
			<!--[%date] [%-5level] [%thread] %logger %line [%X{traceLogId}] %msg%n-->
			<Pattern>${logPattern}</Pattern>
		</encoder>
	</appender>

	<!-- 日志文件 -->
	<appender name="logfile" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<File>${log_dir}/${project_name}.log</File>
		<encoder>
			<Pattern>${logPattern}</Pattern>
			<charset>UTF-8</charset>
		</encoder>
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<fileNamePattern>${log_dir}/${project_name}_%d{yyyy-MM-dd}.log</fileNamePattern>
			<maxHistory>${maxHistory}</maxHistory>
			<!--	<TimeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                    <maxFileSize>512MB</maxFileSize>
                </TimeBasedFileNamingAndTriggeringPolicy>-->
		</rollingPolicy>
	</appender>
	<!--sql语句输出-->
	<logger name="java.sql.PreparedStatement" value="DEBUG"/>
	<logger name="java.sql.Connection" value="DEBUG"/>
	<logger name="java.sql.Statement" value="DEBUG"/>
	<logger name="com.ibatis" value="DEBUG"/>
	<logger name="com.ibatis.common.jdbc.SimpleDataSource" value="DEBUG"/>
	<logger name="com.ibatis.common.jdbc.ScriptRunner" level="DEBUG"/>
	<logger name="com.ibatis.sqlmap.engine.impl.SqlMapClientDelegate"
			value="DEBUG"/>
	<root level="INFO">
		<appender-ref ref="STDOUT"/>
		<appender-ref ref="logfile"/>
	</root>
</configuration>  